version: '3.8'

services:
  profiles-app:
    image: docker.io/library/profile-image
    depends_on:
      - "mssql_db"
    container_name: profile-app-service
    ports:
      - "8085:80"
    build:
      context: ./Profiles
      dockerfile: Profiles.Api/Dockerfile
    environment:
      DBServer: "mssql_db"

  mssql_db:
    container_name: mssql_db
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Pa55w0rd2023"
      ACCEPT_EULA: "Y"

  appointments-app:
    image: docker.io/library/appointment-image
    depends_on:
      - "postgresql_db"
      - "rabbitmq"
    container_name: appointment-app-service
    ports:
      - "8087:80"
    build:
      context: ./Appointments
      dockerfile: Appointments.Api/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=rootroot;Server=postgresql_db;Port=5432;Database=AppointmentsDB; IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:80

  documents-app:
    image: docker.io/library/document-image
    depends_on:
      - "postgresql_db"
      - "rabbitmq"
    container_name: document-app-service
    ports:
      - "8088:80"
    build:
      context: ./Documents
      dockerfile: Documents.Api/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres;Password=rootroot;Server=postgresql_db;Port=5432;Database=DocumentsDB; IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:80

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - '5672:5672'
      - '15672:15672'

  postgresql_db:
    image: postgres:latest
    container_name: postgresql_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=rootroot
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - app_data:/var/lib/postgresql/data

volumes:
  app_data:

